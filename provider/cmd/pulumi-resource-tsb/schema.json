{
    "name": "tsb",
    "attribution": "This Pulumi package is based on the [`tsb` Terraform Provider](https://github.com/tetratelabs/terraform-provider-tsb).",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": ". Based on terraform-provider-tsb: version v0.0.4",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/tetratelabs/terraform-provider-tsb)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-tsb` repo](/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-tsb` repo](https://github.com/tetratelabs/terraform-provider-tsb/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/tetratelabs/terraform-provider-tsb)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-tsb` repo](/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-tsb` repo](https://github.com/tetratelabs/terraform-provider-tsb/issues)."
        }
    },
    "config": {
        "variables": {
            "address": {
                "type": "string",
                "description": "The address that the management plane can be reached at. Must include port.\n"
            },
            "basicAuth": {
                "$ref": "#/types/tsb:config/basicAuth:basicAuth",
                "description": "The basic auth credentials to communicate with a TSB management plane.\n"
            }
        },
        "defaults": [
            "address",
            "basicAuth"
        ]
    },
    "types": {
        "tsb:config/basicAuth:basicAuth": {
            "properties": {
                "password": {
                    "type": "string",
                    "secret": true
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "tsb:index/ProviderBasicAuth:ProviderBasicAuth": {
            "properties": {
                "password": {
                    "type": "string",
                    "secret": true
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": []
                }
            }
        },
        "tsb:index/ServiceAccountKey:ServiceAccountKey": {
            "properties": {
                "defaultToken": {
                    "type": "string",
                    "secret": true
                },
                "encoding": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string",
                    "secret": true
                },
                "publicKey": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "defaultToken",
                        "encoding",
                        "id",
                        "privateKey",
                        "publicKey"
                    ]
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the tsb package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "address": {
                "type": "string",
                "description": "The address that the management plane can be reached at. Must include port.\n"
            },
            "basicAuth": {
                "$ref": "#/types/tsb:index/ProviderBasicAuth:ProviderBasicAuth",
                "description": "The basic auth credentials to communicate with a TSB management plane.\n"
            }
        },
        "required": [
            "address",
            "basicAuth"
        ],
        "inputProperties": {
            "address": {
                "type": "string",
                "description": "The address that the management plane can be reached at. Must include port.\n"
            },
            "basicAuth": {
                "$ref": "#/types/tsb:index/ProviderBasicAuth:ProviderBasicAuth",
                "description": "The basic auth credentials to communicate with a TSB management plane.\n"
            }
        },
        "requiredInputs": [
            "address",
            "basicAuth"
        ]
    },
    "resources": {
        "tsb:index/serviceAccount:ServiceAccount": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description of the resource.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User friendly name for the resource.\n"
                },
                "keyEncoding": {
                    "type": "string",
                    "description": "The format in which the generated key pairs will be returned. If not set keys are returned in PEM format.\n"
                },
                "keys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/tsb:index/ServiceAccountKey:ServiceAccountKey"
                    },
                    "description": "Keys associated with the service account. A default key-pair is automatically created when the Service Account is\ncreated. Note that TSB does not store the private keys, so it is up to the client to store the returned private keys\nsecurely, as they are only returned once after creation. Additional keys can be added (and deleted) by using the\ncorresponding key management APIs. +protoc-gen-terraform:computed\n"
                },
                "name": {
                    "type": "string",
                    "description": "The short name for the resource to be created.\n"
                },
                "parent": {
                    "type": "string",
                    "description": "The parent ID of the Service Account.\n"
                }
            },
            "required": [
                "keyEncoding",
                "keys",
                "name",
                "parent"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A description of the resource.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User friendly name for the resource.\n"
                },
                "keyEncoding": {
                    "type": "string",
                    "description": "The format in which the generated key pairs will be returned. If not set keys are returned in PEM format.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The short name for the resource to be created.\n"
                },
                "parent": {
                    "type": "string",
                    "description": "The parent ID of the Service Account.\n"
                }
            },
            "requiredInputs": [
                "name",
                "parent"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceAccount resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "A description of the resource.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "User friendly name for the resource.\n"
                    },
                    "keyEncoding": {
                        "type": "string",
                        "description": "The format in which the generated key pairs will be returned. If not set keys are returned in PEM format.\n"
                    },
                    "keys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/tsb:index/ServiceAccountKey:ServiceAccountKey"
                        },
                        "description": "Keys associated with the service account. A default key-pair is automatically created when the Service Account is\ncreated. Note that TSB does not store the private keys, so it is up to the client to store the returned private keys\nsecurely, as they are only returned once after creation. Additional keys can be added (and deleted) by using the\ncorresponding key management APIs. +protoc-gen-terraform:computed\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The short name for the resource to be created.\n"
                    },
                    "parent": {
                        "type": "string",
                        "description": "The parent ID of the Service Account.\n"
                    }
                },
                "type": "object"
            }
        },
        "tsb:index/tenant:Tenant": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description of the resource.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User friendly name for the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The short name for the resource to be created.\n"
                },
                "parent": {
                    "type": "string",
                    "description": "The parent ID of the Tenant.\n"
                },
                "securityDomain": {
                    "type": "string",
                    "description": "Security domains can be used to group different resources under the same security domain. Although security domain is\nnot resource itself currently, it follows a fqn format `organizations/myorg/securitydomains/mysecuritydomain`, and a\nchild cannot override any ancestor's security domain. Once a security domain is assigned to a _Tenant_, all the children\nresources will belong to that security domain in the same way a _Workspace_ belongs to a _Tenant_, a _Workspace_ will\nalso belong to the security domain assigned to the _Tenant_. Security domains can also be used to define _Security\nsettings Authorization rules_ in which you can allow or deny request from or to a security domain.\n"
                }
            },
            "required": [
                "name",
                "parent"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A description of the resource.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User friendly name for the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The short name for the resource to be created.\n"
                },
                "parent": {
                    "type": "string",
                    "description": "The parent ID of the Tenant.\n"
                },
                "securityDomain": {
                    "type": "string",
                    "description": "Security domains can be used to group different resources under the same security domain. Although security domain is\nnot resource itself currently, it follows a fqn format `organizations/myorg/securitydomains/mysecuritydomain`, and a\nchild cannot override any ancestor's security domain. Once a security domain is assigned to a _Tenant_, all the children\nresources will belong to that security domain in the same way a _Workspace_ belongs to a _Tenant_, a _Workspace_ will\nalso belong to the security domain assigned to the _Tenant_. Security domains can also be used to define _Security\nsettings Authorization rules_ in which you can allow or deny request from or to a security domain.\n"
                }
            },
            "requiredInputs": [
                "name",
                "parent"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Tenant resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "A description of the resource.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "User friendly name for the resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The short name for the resource to be created.\n"
                    },
                    "parent": {
                        "type": "string",
                        "description": "The parent ID of the Tenant.\n"
                    },
                    "securityDomain": {
                        "type": "string",
                        "description": "Security domains can be used to group different resources under the same security domain. Although security domain is\nnot resource itself currently, it follows a fqn format `organizations/myorg/securitydomains/mysecuritydomain`, and a\nchild cannot override any ancestor's security domain. Once a security domain is assigned to a _Tenant_, all the children\nresources will belong to that security domain in the same way a _Workspace_ belongs to a _Tenant_, a _Workspace_ will\nalso belong to the security domain assigned to the _Tenant_. Security domains can also be used to define _Security\nsettings Authorization rules_ in which you can allow or deny request from or to a security domain.\n"
                    }
                },
                "type": "object"
            }
        },
        "tsb:index/user:User": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "User friendly name for the resource.\n"
                },
                "email": {
                    "type": "string",
                    "description": "Email for the user where alerts and other notifications will be sent.\n"
                },
                "firstName": {
                    "type": "string",
                    "description": "The first name of the user.\n"
                },
                "lastName": {
                    "type": "string",
                    "description": "The last name of the user, if any.\n"
                },
                "loginName": {
                    "type": "string",
                    "description": "The username used in the login credentials.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The short name for the resource to be created.\n"
                },
                "parent": {
                    "type": "string",
                    "description": "The parent ID of the user.\n"
                },
                "sourceType": {
                    "type": "string",
                    "description": "Where the user comes from. It can be a local user that exists only in TSB (LOCAL) or it can be a user that has been\nsynchronized from the Identity Provider (LDAP).\n"
                }
            },
            "required": [
                "loginName",
                "name",
                "parent",
                "sourceType"
            ],
            "inputProperties": {
                "displayName": {
                    "type": "string",
                    "description": "User friendly name for the resource.\n"
                },
                "email": {
                    "type": "string",
                    "description": "Email for the user where alerts and other notifications will be sent.\n"
                },
                "firstName": {
                    "type": "string",
                    "description": "The first name of the user.\n"
                },
                "lastName": {
                    "type": "string",
                    "description": "The last name of the user, if any.\n"
                },
                "loginName": {
                    "type": "string",
                    "description": "The username used in the login credentials.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The short name for the resource to be created.\n"
                },
                "parent": {
                    "type": "string",
                    "description": "The parent ID of the user.\n"
                }
            },
            "requiredInputs": [
                "loginName",
                "name",
                "parent"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering User resources.\n",
                "properties": {
                    "displayName": {
                        "type": "string",
                        "description": "User friendly name for the resource.\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email for the user where alerts and other notifications will be sent.\n"
                    },
                    "firstName": {
                        "type": "string",
                        "description": "The first name of the user.\n"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "The last name of the user, if any.\n"
                    },
                    "loginName": {
                        "type": "string",
                        "description": "The username used in the login credentials.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The short name for the resource to be created.\n"
                    },
                    "parent": {
                        "type": "string",
                        "description": "The parent ID of the user.\n"
                    },
                    "sourceType": {
                        "type": "string",
                        "description": "Where the user comes from. It can be a local user that exists only in TSB (LOCAL) or it can be a user that has been\nsynchronized from the Identity Provider (LDAP).\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "tsb:index:Organization": {
            "inputs": {
                "description": "A collection of arguments for invoking Organization.\n",
                "properties": {
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by Organization.\n",
                "properties": {
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            }
        }
    }
}
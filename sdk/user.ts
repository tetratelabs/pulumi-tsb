// Copyright 2023 Tetrate
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class User extends pulumi.CustomResource {
    /**
     * Get an existing User resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UserState, opts?: pulumi.CustomResourceOptions): User {
        return new User(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tsb:index/user:User';

    /**
     * Returns true if the given object is an instance of User.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is User {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === User.__pulumiType;
    }

    /**
     * User friendly name for the resource.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * Email for the user where alerts and other notifications will be sent.
     */
    public readonly email!: pulumi.Output<string | undefined>;
    /**
     * The first name of the user.
     */
    public readonly firstName!: pulumi.Output<string | undefined>;
    /**
     * The last name of the user, if any.
     */
    public readonly lastName!: pulumi.Output<string | undefined>;
    /**
     * The username used in the login credentials.
     */
    public readonly loginName!: pulumi.Output<string>;
    /**
     * The short name for the resource to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The parent ID of the user.
     */
    public readonly parent!: pulumi.Output<string>;
    /**
     * Where the user comes from. It can be a local user that exists only in TSB (LOCAL) or it can be a user that has been
     * synchronized from the Identity Provider (LDAP).
     */
    public /*out*/ readonly sourceType!: pulumi.Output<string>;

    /**
     * Create a User resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UserArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UserArgs | UserState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as UserState | undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["email"] = state ? state.email : undefined;
            resourceInputs["firstName"] = state ? state.firstName : undefined;
            resourceInputs["lastName"] = state ? state.lastName : undefined;
            resourceInputs["loginName"] = state ? state.loginName : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["parent"] = state ? state.parent : undefined;
            resourceInputs["sourceType"] = state ? state.sourceType : undefined;
        } else {
            const args = argsOrState as UserArgs | undefined;
            if ((!args || args.loginName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'loginName'");
            }
            if ((!args || args.name === undefined) && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            if ((!args || args.parent === undefined) && !opts.urn) {
                throw new Error("Missing required property 'parent'");
            }
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["email"] = args ? args.email : undefined;
            resourceInputs["firstName"] = args ? args.firstName : undefined;
            resourceInputs["lastName"] = args ? args.lastName : undefined;
            resourceInputs["loginName"] = args ? args.loginName : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["parent"] = args ? args.parent : undefined;
            resourceInputs["sourceType"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(User.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering User resources.
 */
export interface UserState {
    /**
     * User friendly name for the resource.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Email for the user where alerts and other notifications will be sent.
     */
    email?: pulumi.Input<string>;
    /**
     * The first name of the user.
     */
    firstName?: pulumi.Input<string>;
    /**
     * The last name of the user, if any.
     */
    lastName?: pulumi.Input<string>;
    /**
     * The username used in the login credentials.
     */
    loginName?: pulumi.Input<string>;
    /**
     * The short name for the resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The parent ID of the user.
     */
    parent?: pulumi.Input<string>;
    /**
     * Where the user comes from. It can be a local user that exists only in TSB (LOCAL) or it can be a user that has been
     * synchronized from the Identity Provider (LDAP).
     */
    sourceType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a User resource.
 */
export interface UserArgs {
    /**
     * User friendly name for the resource.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Email for the user where alerts and other notifications will be sent.
     */
    email?: pulumi.Input<string>;
    /**
     * The first name of the user.
     */
    firstName?: pulumi.Input<string>;
    /**
     * The last name of the user, if any.
     */
    lastName?: pulumi.Input<string>;
    /**
     * The username used in the login credentials.
     */
    loginName: pulumi.Input<string>;
    /**
     * The short name for the resource to be created.
     */
    name: pulumi.Input<string>;
    /**
     * The parent ID of the user.
     */
    parent: pulumi.Input<string>;
}

// Copyright 2023 Tetrate
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function organization(args: OrganizationArgs, opts?: pulumi.InvokeOptions): Promise<OrganizationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tsb:index:Organization", {
        "displayName": args.displayName,
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking Organization.
 */
export interface OrganizationArgs {
    displayName?: string;
    id: string;
}

/**
 * A collection of values returned by Organization.
 */
export interface OrganizationResult {
    readonly displayName?: string;
    readonly id: string;
}
export function organizationOutput(args: OrganizationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<OrganizationResult> {
    return pulumi.output(args).apply((a: any) => organization(a, opts))
}

/**
 * A collection of arguments for invoking Organization.
 */
export interface OrganizationOutputArgs {
    displayName?: pulumi.Input<string>;
    id: pulumi.Input<string>;
}
